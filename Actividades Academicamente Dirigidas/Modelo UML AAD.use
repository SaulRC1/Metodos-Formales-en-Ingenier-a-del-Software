model AAD_MODEL

class Empleado
attributes
    idEmpleado : Integer
    dni : String
    codigoDeEmpleado : Integer
    nombre : String
    apellidos : String
end

class Cliente
attributes
    idCliente : Integer
    nombre : String
    apellidos : String
    numeroDeTarjeta : String
end

abstract class Terminal
attributes
    idDeTerminal : Integer
    codigoDeTerminal : Integer
    cantidadDeDineroAlmacenado : Real
operations
    ejecutarServicioDeTerminal()
end

class TerminalDeVenta < Terminal
attributes
    empleadosPermitidos : Set(Empleado)
operations
    ejecutarServicioDeTerminal()
end

class TerminalDeCobroAutomatico < Terminal
operations
    ejecutarServicioDeTerminal()
end

abstract class Operacion
end

class VentaMedianteEmpleado < Operacion
attributes
    autorDeLaVenta : Empleado
    cliente : Cliente
    montoCobrado : Real
    cambioDevuelto : Real
end

class VentaPorCobroAutomatico < Operacion
attributes
    cliente : Cliente
    montoCobrado : Real
    cambioDevuelto : Real
end

association EmpleadoRealizaVenta between
    Empleado [1] role empleado_ejecuta_venta
    VentaMedianteEmpleado [*] role venta_mediante_empleado_es_ejecutada
end

association EmpleadoUtilizaTerminalDeVenta between
    Empleado [1..*] role empleado_utiliza_terminal_de_venta
    TerminalDeVenta [*] role terminal_de_venta_es_utilizado_por_empleado
end

association TerminalRealizaOperacion between
    Terminal [1] role terminal_realiza_operacion
    Operacion [*] role operacion_realizada_por_terminal
end

association ClienteRealizaVentaMedianteEmpleado between
    Cliente [1] role cliente_realiza_venta_mediante_empleado
    VentaMedianteEmpleado [1..*] role venta_mediante_empleado_realizada_por_cliente
end

association ClienteRealizaVentaPorCobroAutomatico between
    Cliente [1] role cliente_realiza_venta_por_cobro_automatico
    VentaPorCobroAutomatico [1..*] role venta_por_cobro_automatico_realizada_por_cliente
end

-- Restricciones OCL

constraints

context Terminal 
    inv IdTerminalMayorACero: self.idDeTerminal > 0

context TerminalDeVenta::ejecutarServicioDeTerminal()
   pre: self.empleado_utiliza_terminal_de_venta -> exists(E: Empleado | self.empleadosPermitidos -> includes(E))

context Empleado 
    inv Dni9Caracteres: self.dni.size = 9

context VentaMedianteEmpleado
    inv CobradoMayorADevuelto: (self.montoCobrado - self.cambioDevuelto) > 0

context VentaPorCobroAutomatico
    inv CobradoMayorADevuelto: (self.montoCobrado - self.cambioDevuelto) > 0

context Cliente
    inv NumeroDeTarjeta16Digitos: self.numeroDeTarjeta.size = 16
